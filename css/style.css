/* starting variables for the site */
:root {
  --white: #f9faff;
  --platinum: #e3e4e8;
  --windsurfing: #32779b;
  --marina: #5a91c7;
  --gray: #9a9a9a;
  --onyx: #3c3d44;
  --charcoal: #343c47;
  /* first number stand for the top left and lower right corners
  and the second number refers to top right and lower left*/
  --corners: 24px 0;
  --corners-sm: 10px 0;
  /* rem is relative to the root element */
  --base-font-size: 1rem;
  /* light-dark background*/
  --ld-bkgd: light-dark(var(--platinum), var(--charcoal));
  --ld-text: light-dark(var(--onyx), var(--white));
  --ld-projects: light-dark(var(--white), #2e313d);
  /* configruing contrast for blue color */
  --ld-blue: light-dark(var(--windsurfing), #6dadd0);
}

/* set the box sizing to border-box for layouts */
html {
  box-sizing: border-box;
  color-scheme: light dark;
}

/* mode-switcher is the ID of the fieldset, light is the light radio button ID */
html:has(#mode-switcher #light:checked) {
  /* if the light radio button is checked, then change color scheme to light */
  color-scheme: light;
}

html:has(#mode-switcher #dark:checked) {
  color-scheme: dark;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

.wrapper {
  max-width: 1200px;
  /* 0 top and bottoms, and auto for left and right */
  margin: 0 auto;
  /* with rem even if we are not at a large screen dimension, the text doesn't go off to the left */
  padding: 1rem;
}

/* Basic page set to our font size and font family. Link to the font family in CodePen under Settings - CSS - External stylesheets and pens. */
body {
  font-size: var(--base-font-size);
  font-family: "Inter", sans-serif;
  background-color: var(--ld-bkgd);
  color: var(--ld-text);
}

/* make sure images don't exceed the width of the window */
img {
  max-width: 100%;
  border-radius: var(--corners);
}

h1 {
  /* Scaling font size because of resolution and responsiveness */
  font-size: calc(var(--base-font-size) * 2.9);
  margin: 0;
}

h2 {
  font-size: var(--base-font-size);
  text-transform: uppercase;
  color: var(--ld-blue);
  /* em is relative to the current element's font size */
  letter-spacing: 0.25em;
  margin: 0;
}

h3 {
  margin: 0;
}

p {
  /* spacing between lines */
  line-height: 1.5;
}

a {
  color: var(--ld-blue);
}

a:hover {
  color: var(--marina);
}

/* svg styling */
.icons {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: flex-end;
  gap: 2rem;
}

ul svg {
  width: 36px;
  height: 36px;
}

.social {
  fill: var(--ld-blue);
}

.social:hover {
  fill: var(--marina);
}

/* mobile layout for bio */
.main-article {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  text-align: center;
}

.main-article img {
  /* making the picture only show the head in mobile view */
  object-fit: cover;
  object-position: top;
  height: 175px;
  width: 300px;
  /* hiding the rest of the image */
  overflow: hidden;
  /* centers the picture */
  margin: 0 auto;
}

/* footer */
footer {
  text-align: center;
}

.footer-text {
  color: var(--ld-text);
  line-height: 1.5;
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

.footer-text h3 {
  font-size: calc(var(--base-font-size) * 0.85);
}

.footer-text-box ul {
  font-size: calc(var(--base-font-size) * 0.85);
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.footer-text-box li {
  line-height: 2;
}

.h2-footer {
  margin: 2rem 0;
}

.footer-text .social {
  fill: var(--ld-text);
}

.footer-text .social:hover {
  fill: var(--marina);
}

/* projects section */
main {
  margin-top: 5rem;
  margin-bottom: 3rem;
  text-align: center;
}

.project {
  background-color: var(--ld-projects);
  padding: 3rem;
  border-radius: var(--corners);
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
}

.projects {
  display: flex;
  flex-flow: column nowrap;
  gap: 3rem;
}

.project ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  gap: 1rem;
}

.project li {
  background-color: var(--marina);
  color: var(--white);
  padding: 0.5rem;
  border-radius: var(--corners-sm);
  font-size: calc(var(--base-font-size) * 0.85);
}

.project img {
  /* moving the image to the first position from the second position where it was */
  grid-row: 1/2;
}

.img-border {
  border: 1px solid var(--onyx);
}
/* light/dark buttons
fieldset {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  gap: 3rem;
  max-width: 300px;
  top 0, right 0, bottom 5rem pushing away the text from the box, auto browser selects suitable margin for left
  margin: 0 0 5rem auto;
}
*/

/* the original Radio Toggle switch by: @scottohara 
https://codepen.io/scottohara/pen/zLZwNv */
@layer switch {
  .radio-switch {
    border: none;
    padding: 0;
    white-space: nowrap;
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  .radio-switch legend {
    font-size: 2px;
    opacity: 0;
    position: absolute;
  }

  /*
	relative labels to help position the pseudo elements
	the z-index will be handy later, when the labels that
	overlap the visual switch UI need to be adjusted
	to allow for a user to toggle the switch without
	having to move their mouse/finger to the different
	sides of the UI
*/
  .radio-switch label {
    display: inline-block;
    line-height: 2;
    font-size: 0.9rem;
    position: relative;
    z-index: 2;
  }

  /*
	inputs set to opcacity 0 are still accessible.
	Apparently there can be issues targetting inputs with
	Dragon speech recognition software if you use the typical
	'visually-hidden' class
*/
  .radio-switch input {
    opacity: 0;
    position: absolute;
  }

  /*
	a 2 option toggle can only have 2 options...so instead of
	adding more classes, i'm just going to use some
	structural pseudo-classes to target them

  the large padding is used to position the labels
  on top of the visual UI, so the switch UI itself
  can be mouse clicked or finger tapped to toggle
  the current option
*/
  .radio-switch label:first-of-type {
    padding-right: 5em;
  }

  .radio-switch label:last-child {
    margin-left: -4.25em;
    padding-left: 5em;
  }

  .radio-switch:focus-within label:first-of-type:after {
    /* changing #fff to var--white and #2196f3 to var--marina*/
    box-shadow: 0 0 0 2px var(--white), 0 0 0 4px var(--marina);
  }

  /* making the switch UI.  */
  .radio-switch label:first-of-type:before,
  .radio-switch label:first-of-type:after {
    border: 1px solid var(--onyx);
    content: "";
    height: 2em;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    vertical-align: middle;
  }

  .radio-switch label:first-of-type:before {
    background: var(--white);
    border: 1px solid var(--onyx);
    border-radius: 100%;
    position: absolute;
    right: -0.075em;
    transform: translateX(0em);
    transition: transform 0.2s ease-in-out;
    width: 2em;
    z-index: 2;
  }

  .radio-switch label:first-of-type:after {
    background: #777;
    border-radius: 1em;
    margin: 0 1em;
    transition: background 0.2s ease-in-out;
    width: 4em;
  }

  /*
	Visually change the switch UI to match the
	checked state of the first radio button
*/
  .radio-switch input:first-of-type:checked ~ label:first-of-type:after {
    background: var(--marina);
  }

  .radio-switch input:first-of-type:checked ~ label:first-of-type:before {
    transform: translateX(-2em);
  }

  /* Move the 2nd label to have a lower z-index, so when that
   option is toggled, the first label will overlay on top of the
   Switch ui, and the switch can be pressed again to toggle back
   to the prevoius state. */
  .radio-switch input:last-of-type:checked ~ label:last-of-type {
    z-index: 1;
  }
}
@media (min-width: 750px) {
  :root {
    /* change the font size variable */
    --base-font-size: 1.125rem;
  }
  
  h1 {
    /* aligning the h1 text starting to the h2 */
    margin-left: -3px;
  }

  .wrapper {
    padding: 5rem;
  }

  .main-article {
    grid-template-columns: 1fr 1fr;
    align-items: center;
    text-align: left;
  }

  .main-article img {
    /* prevent the picture to get overly large */
    max-height: 400px;
    /* top right bottom left, having margins on the left pushes it to the right*/
    margin: 0 0 0 auto;
    /* removing the image cropping for desktop view */
    object-fit: none;
    object-position: none;
    height: auto;
    width: auto;
    overflow: auto;
  }

  .icons {
    /* icons to the left */
    justify-content: flex-start;
  }

  footer {
    text-align: left;
  }

  .footer-text {
    grid-template-columns: repeat(3, 1fr);
  }

  .footer-text .icons {
    grid-column: 1/4;
  }

  /* pushing the light-dark toggle to the right on desktop resolution */
  .radio-switch {
    justify-content: flex-end;
  }
}

@media (min-width: 850px) {
  main {
    text-align: left;
  }

  /* until the resolution 850, the picture wont get smaller with the side-by-side */
  .project {
    grid-template-columns: 1fr 1fr;
  }

  .project img {
    /* this flips the image and text around */
    grid-row: auto;
  }

  .project ul {
    /* pushing the unordered lists to the left side */
    justify-content: flex-start;
  }
}
